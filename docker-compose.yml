version: '3.9'

services:
  frontend:
    build:
      context: ./client  # Chemin relatif depuis le répertoire racine du projet
      dockerfile: Dockerfile  # Nom du fichier Dockerfile
    ports:
      - "3001:3000"  # Mapping du port local 3001 sur le port 3000 du conteneur
    environment:
      - REACT_APP_BACKEND_URL=http://node:3000  # URL du backend (utilisez le nom du service dans le réseau Docker)
    depends_on:
      - node  # Dépend du service backend node

  node:
    build: .
    command: npm run start
    ports:
      - "3000:3000"
    volumes:
      - ./server:/server
    environment:
      DB_USER: postgres
      DB_PASSWORD: root
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: garage

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: garage
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./init_db:/docker-entrypoint-initdb.d

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    volumes:
      - pgadmin-data:/var/lib/pgadmin

volumes:
  local_pgdata:
  pgadmin-data:
